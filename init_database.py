"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

from database import DatabaseManager, Category, Title, Product, Size, ProductSize

def init_test_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    with DatabaseManager.get_session() as db:
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        db.query(ProductSize).delete()
        db.query(Product).delete()
        db.query(Title).delete()
        db.query(Category).delete()
        db.query(Size).delete()
        db.commit()
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories_data = [
            {"name": "–ê–Ω–∏–º–µ"},
            {"name": "–§–∏–ª—å–º—ã"},
            {"name": "–ò–≥—Ä—ã"},
            {"name": "–ö–ª–∞—Å—Å–∏–∫–∞"}
        ]
        
        categories = []
        for cat_data in categories_data:
            category = Category(name=cat_data["name"])
            db.add(category)
            categories.append(category)
        
        db.commit()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–π—Ç–ª—ã
        titles_data = [
            {"name": "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", "category": "–ê–Ω–∏–º–µ"},
            {"name": "–ù–∞—Ä—É—Ç–æ", "category": "–ê–Ω–∏–º–µ"},
            {"name": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", "category": "–§–∏–ª—å–º—ã"},
            {"name": "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü", "category": "–§–∏–ª—å–º—ã"},
            {"name": "–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç", "category": "–ò–≥—Ä—ã"},
            {"name": "The Witcher", "category": "–ò–≥—Ä—ã"},
            {"name": "–ó–≤–µ–∑–¥–Ω–æ–µ –Ω–µ–±–æ", "category": "–ö–ª–∞—Å—Å–∏–∫–∞"},
            {"name": "–õ—É–Ω–∞ –∏ –∑–≤–µ–∑–¥—ã", "category": "–ö–ª–∞—Å—Å–∏–∫–∞"}
        ]
        
        titles = []
        for title_data in titles_data:
            category = next(cat for cat in categories if cat.name == title_data["category"])
            title = Title(name=title_data["name"], category_id=category.id)
            db.add(title)
            titles.append(title)
        
        db.commit()
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
        sizes_data = [
            {"name": "–ú–∏–Ω–∏ 15—Å–º", "price": 1500},
            {"name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç 25—Å–º", "price": 2500},
            {"name": "–ë–æ–ª—å—à–æ–π 40—Å–º", "price": 3500},
            {"name": "–û–≥—Ä–æ–º–Ω—ã–π 50—Å–º", "price": 4500}
        ]
        
        sizes = []
        for size_data in sizes_data:
            size = Size(name=size_data["name"], price=size_data["price"])
            db.add(size)
            sizes.append(size)
        
        db.commit()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        products_data = [
            {"name": "–≠—Ä–µ–Ω –ô–µ–≥–µ—Ä", "title": "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", "photo_url": None},
            {"name": "–ú–∏–∫–∞—Å–∞ –ê–∫–∫–µ—Ä–º–∞–Ω", "title": "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", "photo_url": None},
            {"name": "–õ–µ–≤–∏", "title": "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", "photo_url": None},
            {"name": "–ù–∞—Ä—É—Ç–æ –£–∑—É–º–∞–∫–∏", "title": "–ù–∞—Ä—É—Ç–æ", "photo_url": None},
            {"name": "–°–∞—Å–∫–µ –£—á–∏—Ö–∞", "title": "–ù–∞—Ä—É—Ç–æ", "photo_url": None},
            {"name": "–ö–∞–∫–∞—à–∏ –•–∞—Ç–∞–∫–µ", "title": "–ù–∞—Ä—É—Ç–æ", "photo_url": None},
            {"name": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", "title": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", "photo_url": None},
            {"name": "–ì–µ—Ä–º–∏–æ–Ω–∞ –ì—Ä–µ–π–Ω–¥–∂–µ—Ä", "title": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", "photo_url": None},
            {"name": "–†–æ–Ω –£–∏–∑–ª–∏", "title": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", "photo_url": None},
            {"name": "–§—Ä–æ–¥–æ –ë—ç–≥–≥–∏–Ω—Å", "title": "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü", "photo_url": None},
            {"name": "–ì—ç–Ω–¥–∞–ª—å—Ñ", "title": "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü", "photo_url": None},
            {"name": "–ê—Ä–∞–≥–æ—Ä–Ω", "title": "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü", "photo_url": None},
            {"name": "–°—Ç–∏–≤", "title": "–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç", "photo_url": None},
            {"name": "–ö—Ä–∏–ø–µ—Ä", "title": "–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç", "photo_url": None},
            {"name": "–ì–µ—Ä–∞–ª—å—Ç –∏–∑ –†–∏–≤–∏–∏", "title": "The Witcher", "photo_url": None},
            {"name": "–ô–µ–Ω–Ω–∏—Ñ—ç—Ä", "title": "The Witcher", "photo_url": None},
            {"name": "–¶–∏—Ä–∏–ª–ª–∞", "title": "The Witcher", "photo_url": None},
            {"name": "–°–æ–∑–≤–µ–∑–¥–∏–µ –ë–æ–ª—å—à–æ–π –ú–µ–¥–≤–µ–¥–∏—Ü—ã", "title": "–ó–≤–µ–∑–¥–Ω–æ–µ –Ω–µ–±–æ", "photo_url": None},
            {"name": "–ú–ª–µ—á–Ω—ã–π –ø—É—Ç—å", "title": "–ó–≤–µ–∑–¥–Ω–æ–µ –Ω–µ–±–æ", "photo_url": None},
            {"name": "–ü–æ–ª–Ω–∞—è –ª—É–Ω–∞", "title": "–õ—É–Ω–∞ –∏ –∑–≤–µ–∑–¥—ã", "photo_url": None},
            {"name": "–ó–≤–µ–∑–¥–Ω–∞—è –Ω–æ—á—å", "title": "–õ—É–Ω–∞ –∏ –∑–≤–µ–∑–¥—ã", "photo_url": None}
        ]
        
        products = []
        for product_data in products_data:
            title = next(title for title in titles if title.name == product_data["title"])
            product = Product(
                name=product_data["name"], 
                title_id=title.id, 
                photo_url=product_data["photo_url"]
            )
            db.add(product)
            products.append(product)
        
        db.commit()
        
        # –°–≤—è–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ (–≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–æ –≤—Å–µ–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏)
        for product in products:
            for size in sizes:
                product_size = ProductSize(product_id=product.id, size_id=size.id)
                db.add(product_size)
        
        db.commit()
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        print(f"üìÇ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print(f"üìñ –°–æ–∑–¥–∞–Ω–æ —Ç–∞–π—Ç–ª–æ–≤: {len(titles)}")
        print(f"üõçÔ∏è –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        print(f"üìè –°–æ–∑–¥–∞–Ω–æ —Ä–∞–∑–º–µ—Ä–æ–≤: {len(sizes)}")
        print(f"üîó –°–æ–∑–¥–∞–Ω–æ —Å–≤—è–∑–µ–π —Ç–æ–≤–∞—Ä-—Ä–∞–∑–º–µ—Ä: {len(products) * len(sizes)}")

if __name__ == "__main__":
    init_test_data()



