#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–æ–≤
"""

import asyncio
import logging
from config import BOT1_TOKEN, BOT2_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_bot1():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
    try:
        logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
        import bot1_main
        logger.info("‚úÖ –ò–º–ø–æ—Ä—Ç bot1_main —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        if BOT1_TOKEN:
            logger.info(f"‚úÖ –¢–æ–∫–µ–Ω BOT1 –∑–∞–≥—Ä—É–∂–µ–Ω: {BOT1_TOKEN[:10]}...")
        else:
            logger.error("‚ùå –¢–æ–∫–µ–Ω BOT1 –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
        if bot1_main.bot:
            logger.info("‚úÖ –ë–æ—Ç bot1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error("‚ùå –ë–æ—Ç bot1 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        if bot1_main.dp:
            logger.info("‚úÖ –î–∏—Å–ø–µ—Ç—á–µ—Ä bot1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error("‚ùå –î–∏—Å–ø–µ—Ç—á–µ—Ä bot1 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        logger.info("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞: {e}")

async def test_bot2():
    """–¢–µ—Å—Ç –±–æ—Ç–∞ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    try:
        logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∫–∞—Ç–∞–ª–æ–≥–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
        import bot2_catalog
        logger.info("‚úÖ –ò–º–ø–æ—Ä—Ç bot2_catalog —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        if BOT2_TOKEN:
            logger.info(f"‚úÖ –¢–æ–∫–µ–Ω BOT2 –∑–∞–≥—Ä—É–∂–µ–Ω: {BOT2_TOKEN[:10]}...")
        else:
            logger.error("‚ùå –¢–æ–∫–µ–Ω BOT2 –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
        if bot2_catalog.bot:
            logger.info("‚úÖ –ë–æ—Ç bot2 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error("‚ùå –ë–æ—Ç bot2 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        if bot2_catalog.dp:
            logger.info("‚úÖ –î–∏—Å–ø–µ—Ç—á–µ—Ä bot2 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error("‚ùå –î–∏—Å–ø–µ—Ç—á–µ—Ä bot2 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        logger.info("‚úÖ –ë–æ—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –±–æ—Ç–∞ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–æ–≤...")
    
    await test_bot1()
    print()
    await test_bot2()
    
    logger.info("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main())

